steps: 
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Download all raw result artifacts
      uses: actions/download-artifact@v4
      with:
        path: raw-collection

    - name: Debug: List raw JSON files
      run: |
        echo "🔍 Verifying downloaded test-results/report.json files:"
        find raw-collection -name report.json

    - name: Set npm registry to Cloudflare mirror
      run: npm config set registry https://registry.npmmirror.com/

    - name: Install dependencies
      run: npm ci
      working-directory: ./Playwright-Automation

    # ✅ Merge the raw Playwright JSON files (not Monocart report JSONs)
    - name: Merge raw test results
      run: node merge-monocart.mjs
      working-directory: ./Playwright-Automation

    # ✅ Generate Monocart HTML report using correct Node API
    - name: Generate final Monocart HTML report
      run: node generate-report.mjs
      working-directory: ./Playwright-Automation

    - name: Upload merged report
      uses: actions/upload-artifact@v4
      with:
        name: merged-report
        path: Playwright-Automation/merged-report



import { merge } from 'monocart-reporter';
import { globSync } from 'glob';

const run = async () => {
  const files = globSync('../raw-collection/**/report.json');
  console.log(`Found ${files.length} raw JSON files to merge`);
  files.forEach(f => console.log(' → ' + f));

  if (!files.length) {
    console.error('No JSON files found to merge!');
    process.exit(1);
  }

  await merge({
    files,
    output: '../merged-results.json'
  });

  console.log('✅ Merged results written to ../merged-results.json');
};

run();





import { generate } from 'monocart-reporter';

const run = async () => {
  try {
    await generate({
      resultFile: '../merged-results.json',
      outputFile: './merged-report/index.html'
    });
    console.log('✅ Merged HTML report generated at ./merged-report/index.html');
  } catch (err) {
    console.error('❌ Failed to generate HTML report:', err);
    process.exit(1);
  }
};

run();
