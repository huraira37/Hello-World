name: Multiple Jobs Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  id-token: write
  pull-requests: write
  issues: write

jobs:
  test:
    timeout-minutes: 100
    runs-on: ubuntu-latest-16-core-internal
    strategy:
      matrix:
        group: [
          { file: 'Playwright-Automation/tests/cf_AutoTest/restrictedOperator/Restrict_Operator_Tests.spec.ts', name: 'Restrict Operator Tests Group 6' },
          { file: 'Playwright-Automation/tests/cf_PropertyTest/inspectionScoreCard/inspectionScoreCard.spec.ts', name: 'Inspection ScoreCard Tests Group 10' }
        ]

    name: ${{ matrix.group.name }}
    env:
      CI: true
    steps:
    - uses: actions/checkout@v4

    - uses: lmigtech/internal-actions/actions/setup-node@v0
      with:
        node-version: "20"
        cache: "npm"
        cache-dependency-path: "**/package-lock.json"
        working-directory: ./Playwright-Automation

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      working-directory: ./Playwright-Automation

    - name: Install Additional Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg xvfb zip unzip
      shell: bash

    - name: Start Xvfb (Virtual Display)
      run: |
        Xvfb :99 -screen 0 1920x1080x24 -ac -nolisten tcp &
        sleep 3
      shell: bash

    - name: Run Playwright Tests with JSON report
      id: run_tests
      run: |
        set -o pipefail
        EXIT_CODE=0
        DISPLAY=:99 npx playwright test ${{ matrix.group.file }} --project="Google Chrome" --reporter=json --output=./raw-results 2>&1 | tee test_output.txt || EXIT_CODE=$?
        echo "exit-code=$EXIT_CODE" >> $GITHUB_OUTPUT
        exit $EXIT_CODE
      working-directory: ./Playwright-Automation
      continue-on-error: true

    # âœ… Upload raw JSON result to be used in final merge
    - name: Upload raw test result JSON
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Raw-Results-${{ matrix.group.name }}
        path: ./Playwright-Automation/raw-results
        retention-days: 3

    # Optional uploads you already had
    - name: Upload screenshots (optional)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Screenshots-${{ matrix.group.name }}
        path: ./Playwright-Automation/test-results/**/*.png
        retention-days: 1

    - name: Upload video (optional)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Test-Videos-${{ matrix.group.name }}
        path: ./Playwright-Automation/test-results/**/*.webm
        retention-days: 1

  merge-reports:
    needs: test
    runs-on: ubuntu-latest-16-core-internal
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Download all raw test results
      uses: actions/download-artifact@v4
      with:
        path: raw-collection

    - name: Debug: List downloaded raw JSON files
      run: |
        echo "ðŸ—‚ Showing structure of raw-collection/"
        find raw-collection -type f

    - name: Set npm registry to Cloudflare mirror (avoid E503)
      run: npm config set registry https://registry.npmmirror.com/

    - name: Install dependencies
      run: npm ci
      working-directory: ./Playwright-Automation

    # âœ… Merge raw JSON files
    - name: Merge raw JSON results
      run: |
        npx monocart-reporter merge raw-collection/**/index.json --output merged-results.json
      working-directory: ./Playwright-Automation

    # âœ… Generate HTML from merged result
    - name: Generate final Monocart report
      run: |
        npx monocart-reporter generate merged-results.json --output merged-report
      working-directory: ./Playwright-Automation

    - name: Upload merged Monocart report
      uses: actions/upload-artifact@v4
      with:
        name: merged-report
        path: Playwright-Automation/merged-report
