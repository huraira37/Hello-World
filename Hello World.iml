merge-reports:
  needs: aggregate  # ‚úÖ Changed: use artifact from aggregate job
  runs-on: ubuntu-latest-16-core-internal
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    # ‚úÖ Download zipped Final-Report.zip from aggregate job
    - name: Download Final Combined Artifact Zip
      uses: actions/download-artifact@v4
      with:
        name: Final-Combined-Report
        path: extracted

    # ‚úÖ Unzip Final-Report.zip directly into root (avoids nested folders)
    - name: Unzip combined report
      run: |
        unzip -q extracted/Final-Report.zip -d .

    # ‚úÖ Confirm extracted structure before merging
    - name: Debug: List contents of all-artifacts
      run: |
        echo "Listing contents of unzipped all-artifacts:"
        find all-artifacts

    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-cache

    - name: Set npm registry to Cloudflare mirror (avoid E503)
      run: npm config set registry https://registry.npmmirror.com/

    - name: Install dependencies
      run: npm ci
      working-directory: ./Playwright-Automation

    # ‚úÖ Merge Monocart reports using updated script (glob handles nested folders)
    - name: Merge Monocart reports using monocart-reporter
      run: node merge-monocart.mjs
      working-directory: ./Playwright-Automation

    - name: Debug: List merged report directory
      run: |
        echo "Checking contents of merged-report:"
        ls -R merged-report || echo "merged-report folder not found"

    - name: Upload merged report
      uses: actions/upload-artifact@v4
      with:
        name: merged-report
        path: merged-report



*****************************************************************************************


import { merge } from 'monocart-reporter';
import { globSync } from 'glob';

const run = async () => {
  try {
    // ‚úÖ Handles any level of nesting for Monocart-*/index.json
    const files = globSync('../all-artifacts/**/Monocart-*/index.json');

    console.log(`üß© Found ${files.length} report(s) to merge`);
    if (files.length === 0) {
      throw new Error('No valid Monocart report files found.');
    }

    await merge({
      files,
      output: '../merged-report'
    });

    console.log('‚úÖ Merged report created at ../merged-report');
  } catch (error) {
    console.error('‚ùå Merge failed:', error);
    process.exit(1);
  }
};

run();

    
