I was trying to implement code coverage in my Playwright Automation framework, when code coverage report generating is not generating the report with eastern time. I'm sharing all my file so you deeply read and update the code with eastern time so it will reflect the time in the coverage report. please highlight where you will make a update....


.nycrc file

{
    "extends": "@istanbuljs/nyc-config-typescript",
    "all": true,
    "include": [
        "src//*.ts"
    ],
    "exclude": [
        "/.spec.ts",
        "**/.test.ts"
    ],
    "reporter": [
        "html",
        "text"
    ],
    "sourceMap": true,
    "instrument": true
}



global-setup.ts file

import * as fs from 'fs'; 
import * as path from 'path'; 
import { chromium } from '@playwright/test';

export default async function globalSetup() {  
    
await require('nyc').createInstance({ cwd: __dirname, reporter: ['text', 'html'], }).wrap();

const browser = await chromium.launch(); 
const context = await browser.newContext(); 
await context.tracing.start({ screenshots: true, snapshots: true }); 
await context.tracing.stop({ path: 'test-trace.zip' }); await browser.close(); }


global-teardown.ts file

import * as fs from 'fs';
import * as path from 'path';


export default async function globalTeardown() {
    const nycInstance = require('nyc');
    const nyc = nycInstance.createInstance({
        cwd: __dirname,
        reporter: ['text', 'html'],
    });

    nyc.writeCoverageFile();
    nyc.report();
}



package.json file

{
  "name": "codecoverage",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "playwright test",
    "coverage": "nyc playwright test --headed"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@playwright/test": "^1.51.1",
    "@types/node": "^22.13.10",
    "source-map-support": "^0.5.21",
    "ts-node": "^10.9.2"
    
  },
  "dependencies": {
    "nyc": "^17.1.0"
  }
}


playwright.config.ts file

import { defineConfig } from '@playwright/test';

export default defineConfig({
  testDir: './tests',
  fullyParallel: false,
  reporter: 'html',
  
  use: {
    // baseURL: 'https://test-lmidp.libertymutual.com/',
    trace: 'on-first-retry',
    // video: 'on'
  },
  projects: [
    {
      name: 'chromium',
      use: {
        browserName: 'chromium',
      },
    },
  ],
});


test-1.spec.ts file

import { test, expect } from '@playwright/test';
import { getPageTitle } from '../src/demo-page';

test('example test with code coverage', async ({ page }) => {
  //  await page.goto('https://deal4loans.com');
  await page.goto('https://wallethub.com/');

  const title = await page.title();

  const formattedTitle = getPageTitle(title);

  expect(formattedTitle).toBe('Page Title: WalletHub - Credit Cards, Loans, Credit Scores & More | Helping You Reach Top Financial Fitness');

});



demo-page.ts

export function getPageTitle(title: string): string {
    return `Page Title: ${title}`;
}

export function getPageTitle1(title: string): string {
    return `Page Title: ${title}`;
}

Please give me best solution after reading whole file deeply
